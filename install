#!/usr/bin/env python3

import os
import shutil
from typing import NoReturn
import subprocess

REPO_URL = "https://gitlab.com/gj-535479/lms-rust-cli"
EXE_NAME = "lms"
TMP_LOC = "/tmp/lms_rust"


REQUIRED_INSTALLED = {"git": "git", "cargo": "rustup"}


def die(message: str) -> NoReturn:
    """
    Quit program with error.

    Args:
        message (str): The error message to display before exiting.
    """
    print(message)
    exit(1)


def lprint(message: str) -> None:
    """
    Lazy print with format.

    Args:
        message (str): The message to print.
    """
    print(f"{message} ...", end="", flush=True)


def execute(commands: list[str], err_message: str) -> None:
    """
    Execute a list of commands.

    Args:
        commands (list[str]): A list of commands to execute.
        message (str): A message to display in case of failure.

    Returns:
        None

    Note:
        This function runs the specified commands using subprocess.run().
        It redirects the standard output and standard error streams to DEVNULL,
        and does not raise an exception if the process returns a non-zero exit status.
        If the process returns a non-zero exit status, it calls the die() function with the provided message.
    """
    process_exe = subprocess.run(
        commands,
        stdout=subprocess.DEVNULL,
        stderr=subprocess.DEVNULL,
        check=False,
    )

    if process_exe == 1:  # type: ignore
        die(err_message)


def is_installed(command: str, err_message: str) -> None | NoReturn:
    if not shutil.which(command):
        die(err_message)


def main():
    print(rf"""
                             /$$       /$$      /$$  /$$$$$$ 
                            | $$      | $$$    /$$$ /$$__  $$
                            | $$      | $$$$  /$$$$| $$  \__/
                            | $$      | $$ $$/$$ $$|  $$$$$$ 
                            | $$      | $$  $$$| $$ \____  $$
                            | $$      | $$\  $ | $$ /$$  \ $$
                            | $$$$$$$$| $$ \/  | $$|  $$$$$$/
                            |________/|__/     |__/ \______/ 
                                 
                                 
                                
To install lms-rust you need to have: 
{list(REQUIRED_INSTALLED.keys())} installed.
    """)  # noqa: W291

    for program, install_method in REQUIRED_INSTALLED.items():
        is_installed(
            program,
            f"You don't have {install_method.title()} installed. Please install {install_method.title()}.",
        )

    if os.path.exists(TMP_LOC):
        shutil.rmtree(TMP_LOC)

    lprint("Downloading")
    os.makedirs(TMP_LOC, exist_ok=True)
    execute(["git", "clone", REPO_URL, TMP_LOC], "Error occurred during downloading.")
    print(" done")

    lprint("Compiling")
    os.chdir(TMP_LOC)
    execute(
        ["cargo", "build", "--release", "--quiet"], "Error occurred during compilation."
    )
    print(" done")

    lprint("Organizing file system")
    os.makedirs(os.path.expanduser("~/.local/bin"), exist_ok=True)
    shutil.copy(
        os.path.join(TMP_LOC, "target", "release", EXE_NAME),
        os.path.expanduser(f"~/.local/bin/{EXE_NAME}"),
    )
    shutil.rmtree(TMP_LOC, ignore_errors=True)
    print(" done")

    if path := os.getenv("PATH"):  # noqa: SIM102
        if os.path.expanduser("~/.local/bin") not in path:
            print("This system doesn't have $HOME/.local/bin in its PATH.")
            print("  Add this before running lms")

    print("\nInstallation complete")


if __name__ == "__main__":
    main()
